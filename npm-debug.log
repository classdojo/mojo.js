0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.2.18
3 info using node@v0.10.5
4 verbose publish [ '.' ]
5 verbose read json /Users/craig/Developer/Jobs/classdojo/mojo/package.json
6 verbose cache add [ '.', null ]
7 verbose cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: '.',
8 verbose parsed url   path: '.',
8 verbose parsed url   href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /Users/craig/.npm/3a52ce78-.lock
11 verbose read json package.json
12 verbose tar pack [ '/var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/tmp.tgz',
12 verbose tar pack   '.' ]
13 verbose tarball /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/tmp.tgz
14 verbose folder .
15 info prepublish mojojs@0.6.2
16 silly lockFile 3a52ce78- .
17 verbose lock . /Users/craig/.npm/3a52ce78-.lock
18 silly lockFile 23fc8823-31260-0-8872596407309175-tmp-tgz /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/tmp.tgz
19 verbose lock /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/tmp.tgz /Users/craig/.npm/23fc8823-31260-0-8872596407309175-tmp-tgz.lock
20 silly lockFile 3a52ce78- .
21 silly lockFile 3a52ce78- .
22 silly lockFile 23fc8823-31260-0-8872596407309175-tmp-tgz /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/tmp.tgz
23 silly lockFile 23fc8823-31260-0-8872596407309175-tmp-tgz /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/tmp.tgz
24 verbose tar unpack /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/tmp.tgz
25 silly lockFile ace79bb9-31260-0-8872596407309175-package /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/package
26 verbose lock /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/package /Users/craig/.npm/ace79bb9-31260-0-8872596407309175-package.lock
27 silly lockFile 23fc8823-31260-0-8872596407309175-tmp-tgz /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/tmp.tgz
28 verbose lock /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/tmp.tgz /Users/craig/.npm/23fc8823-31260-0-8872596407309175-tmp-tgz.lock
29 silly gunzTarPerm modes [ '755', '644' ]
30 silly gunzTarPerm extractEntry package.json
31 silly gunzTarPerm modified mode [ 'package.json', 511, 493 ]
32 silly gunzTarPerm extractEntry .npmignore
33 silly gunzTarPerm modified mode [ '.npmignore', 511, 493 ]
34 silly gunzTarPerm extractEntry README.md
35 silly gunzTarPerm modified mode [ 'README.md', 511, 493 ]
36 silly gunzTarPerm extractEntry index.js
37 silly gunzTarPerm modified mode [ 'index.js', 511, 493 ]
38 silly gunzTarPerm extractEntry mesh.js
39 silly gunzTarPerm modified mode [ 'mesh.js', 511, 493 ]
40 silly gunzTarPerm extractEntry lib/index.js
41 silly gunzTarPerm extractEntry lib/bindable/inheritable.js
42 silly gunzTarPerm extractEntry lib/mediator/index.js
43 silly gunzTarPerm extractEntry lib/mediator/mediator.js
44 silly gunzTarPerm extractEntry lib/models/index.js
45 silly gunzTarPerm extractEntry lib/utils/async.js
46 silly gunzTarPerm extractEntry lib/utils/idGenerator.js
47 silly gunzTarPerm extractEntry lib/views/index.js
48 silly gunzTarPerm extractEntry lib/views/list.js
49 silly gunzTarPerm extractEntry lib/views/base/decorable.js
50 silly gunzTarPerm extractEntry lib/views/base/index.js
51 silly gunzTarPerm extractEntry lib/views/base/states.js
52 silly gunzTarPerm extractEntry lib/views/base/decor/attributes.js
53 silly gunzTarPerm extractEntry lib/views/base/decor/bindings.js
54 silly gunzTarPerm extractEntry lib/views/base/decor/selector.js
55 silly gunzTarPerm extractEntry lib/views/base/decor/events.js
56 silly gunzTarPerm extractEntry lib/views/base/decor/factory.js
57 silly gunzTarPerm extractEntry lib/views/base/decor/base.js
58 silly gunzTarPerm extractEntry lib/views/base/decor/preload.js
59 silly gunzTarPerm extractEntry lib/views/base/decor/transition.js
60 silly gunzTarPerm extractEntry lib/views/base/decor/paperclip.js
61 silly gunzTarPerm extractEntry lib/views/base/decor/sections/index.js
62 silly gunzTarPerm extractEntry lib/views/base/decor/sections/section.js
63 silly gunzTarPerm extractEntry lib/views/base/decor/sections2/index.js
64 silly gunzTarPerm extractEntry lib/views/base/decor/sections2/child/index.js
65 silly gunzTarPerm extractEntry lib/views/base/decor/sections2/list/index.js
66 silly gunzTarPerm extractEntry lib/views/base/decor/sections2/states/index.js
67 silly gunzTarPerm extractEntry lib/views/base/decor/sections2/states/state.js
68 silly gunzTarPerm extractEntry lib/views/base/decor/dragdrop/collection.js
69 silly gunzTarPerm extractEntry lib/views/base/decor/dragdrop/draggable.js
70 silly gunzTarPerm extractEntry lib/views/base/decor/dragdrop/droppable.js
71 silly gunzTarPerm extractEntry lib/views/list.coffee
72 silly gunzTarPerm extractEntry lib/views/states/index.js
73 silly gunzTarPerm extractEntry lib/views/states/state.js
74 silly gunzTarPerm extractEntry makefile
75 silly gunzTarPerm modified mode [ 'makefile', 511, 493 ]
76 silly gunzTarPerm extractEntry .cupboard
77 silly gunzTarPerm modified mode [ '.cupboard', 511, 493 ]
78 silly gunzTarPerm extractEntry docs/README.md
79 silly gunzTarPerm modified mode [ 'docs/README.md', 511, 493 ]
80 silly gunzTarPerm extractEntry docs/adapters/README.md
81 silly gunzTarPerm modified mode [ 'docs/adapters/README.md', 511, 493 ]
82 silly gunzTarPerm extractEntry docs/brainstorm/README.md
83 silly gunzTarPerm modified mode [ 'docs/brainstorm/README.md', 511, 493 ]
84 silly gunzTarPerm extractEntry docs/data-binding/README.md
85 silly gunzTarPerm modified mode [ 'docs/data-binding/README.md', 511, 493 ]
86 silly gunzTarPerm extractEntry docs/data-binding/collections.md
87 silly gunzTarPerm modified mode [ 'docs/data-binding/collections.md', 511, 493 ]
88 silly gunzTarPerm extractEntry docs/data-binding/objects.md
89 silly gunzTarPerm modified mode [ 'docs/data-binding/objects.md', 511, 493 ]
90 silly gunzTarPerm extractEntry docs/dev process/README.md
91 silly gunzTarPerm modified mode [ 'docs/dev process/README.md', 511, 493 ]
92 silly gunzTarPerm extractEntry docs/dev process/kn.md
93 silly gunzTarPerm modified mode [ 'docs/dev process/kn.md', 511, 493 ]
94 silly gunzTarPerm extractEntry docs/mediator/README.md
95 silly gunzTarPerm modified mode [ 'docs/mediator/README.md', 511, 493 ]
96 silly gunzTarPerm extractEntry docs/views/README.md
97 silly gunzTarPerm modified mode [ 'docs/views/README.md', 511, 493 ]
98 silly gunzTarPerm extractEntry docs/views/decorators/README.md
99 silly gunzTarPerm modified mode [ 'docs/views/decorators/README.md', 511, 493 ]
100 silly gunzTarPerm extractEntry docs/views/sections/README.md
101 silly gunzTarPerm modified mode [ 'docs/views/sections/README.md', 511, 493 ]
102 silly gunzTarPerm extractEntry docs/views/templates/README.md
103 silly gunzTarPerm modified mode [ 'docs/views/templates/README.md', 511, 493 ]
104 silly gunzTarPerm extractEntry src/bindable/inheritable.coffee
105 silly gunzTarPerm modified mode [ 'src/bindable/inheritable.coffee', 511, 493 ]
106 silly gunzTarPerm extractEntry src/index.coffee
107 silly gunzTarPerm modified mode [ 'src/index.coffee', 511, 493 ]
108 silly gunzTarPerm extractEntry src/mediator/index.coffee
109 silly gunzTarPerm modified mode [ 'src/mediator/index.coffee', 511, 493 ]
110 silly gunzTarPerm extractEntry src/mediator/mediator.coffee
111 silly gunzTarPerm modified mode [ 'src/mediator/mediator.coffee', 511, 493 ]
112 silly gunzTarPerm extractEntry src/models/index.coffee
113 silly gunzTarPerm modified mode [ 'src/models/index.coffee', 511, 493 ]
114 silly gunzTarPerm extractEntry src/utils/async.coffee
115 silly gunzTarPerm modified mode [ 'src/utils/async.coffee', 511, 493 ]
116 silly gunzTarPerm extractEntry src/utils/idGenerator.coffee
117 silly gunzTarPerm modified mode [ 'src/utils/idGenerator.coffee', 511, 493 ]
118 silly gunzTarPerm extractEntry src/views/base/decor/base.coffee
119 silly gunzTarPerm modified mode [ 'src/views/base/decor/base.coffee', 511, 493 ]
120 silly gunzTarPerm extractEntry src/views/base/decor/bindings.coffee
121 silly gunzTarPerm modified mode [ 'src/views/base/decor/bindings.coffee', 511, 493 ]
122 silly gunzTarPerm extractEntry src/views/base/decor/dragdrop/collection.coffee
123 silly gunzTarPerm modified mode [ 'src/views/base/decor/dragdrop/collection.coffee', 511, 493 ]
124 silly gunzTarPerm extractEntry src/views/base/decor/dragdrop/draggable.coffee
125 silly gunzTarPerm modified mode [ 'src/views/base/decor/dragdrop/draggable.coffee', 511, 493 ]
126 silly gunzTarPerm extractEntry src/views/base/decor/dragdrop/droppable.coffee
127 silly gunzTarPerm modified mode [ 'src/views/base/decor/dragdrop/droppable.coffee', 511, 493 ]
128 silly gunzTarPerm extractEntry src/views/base/decor/events.coffee
129 silly gunzTarPerm modified mode [ 'src/views/base/decor/events.coffee', 511, 493 ]
130 silly gunzTarPerm extractEntry src/views/base/decor/factory.coffee
131 silly gunzTarPerm modified mode [ 'src/views/base/decor/factory.coffee', 511, 493 ]
132 silly gunzTarPerm extractEntry src/views/base/decor/paperclip.coffee
133 silly gunzTarPerm modified mode [ 'src/views/base/decor/paperclip.coffee', 511, 493 ]
134 silly gunzTarPerm extractEntry src/views/base/decor/preload.coffee
135 silly gunzTarPerm modified mode [ 'src/views/base/decor/preload.coffee', 511, 493 ]
136 silly gunzTarPerm extractEntry src/views/base/decor/sections/index.coffee
137 silly gunzTarPerm modified mode [ 'src/views/base/decor/sections/index.coffee', 511, 493 ]
138 silly gunzTarPerm extractEntry src/views/base/decor/sections/section.coffee
139 silly gunzTarPerm modified mode [ 'src/views/base/decor/sections/section.coffee', 511, 493 ]
140 silly gunzTarPerm extractEntry src/views/base/decor/selector.coffee
141 silly gunzTarPerm modified mode [ 'src/views/base/decor/selector.coffee', 511, 493 ]
142 silly gunzTarPerm extractEntry src/views/base/decor/transition.coffee
143 silly gunzTarPerm modified mode [ 'src/views/base/decor/transition.coffee', 511, 493 ]
144 silly gunzTarPerm extractEntry src/views/base/decorable.coffee
145 silly gunzTarPerm modified mode [ 'src/views/base/decorable.coffee', 511, 493 ]
146 silly gunzTarPerm extractEntry src/views/base/index.coffee
147 silly gunzTarPerm modified mode [ 'src/views/base/index.coffee', 511, 493 ]
148 silly gunzTarPerm extractEntry src/views/base/states.coffee
149 silly gunzTarPerm modified mode [ 'src/views/base/states.coffee', 511, 493 ]
150 silly gunzTarPerm extractEntry src/views/index.coffee
151 silly gunzTarPerm modified mode [ 'src/views/index.coffee', 511, 493 ]
152 silly gunzTarPerm extractEntry src/views/list.coffee
153 silly gunzTarPerm modified mode [ 'src/views/list.coffee', 511, 493 ]
154 silly gunzTarPerm extractEntry src/views/states/index.coffee
155 silly gunzTarPerm modified mode [ 'src/views/states/index.coffee', 511, 493 ]
156 silly gunzTarPerm extractEntry src/views/states/state.coffee
157 silly gunzTarPerm modified mode [ 'src/views/states/state.coffee', 511, 493 ]
158 verbose read json /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/package/package.json
159 silly lockFile ace79bb9-31260-0-8872596407309175-package /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/package
160 silly lockFile ace79bb9-31260-0-8872596407309175-package /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/package
161 silly lockFile 23fc8823-31260-0-8872596407309175-tmp-tgz /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/tmp.tgz
162 silly lockFile 23fc8823-31260-0-8872596407309175-tmp-tgz /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/tmp.tgz
163 verbose from cache /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/package/package.json
164 verbose tar pack [ '/Users/craig/.npm/mojojs/0.6.2/package.tgz',
164 verbose tar pack   '/var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/package' ]
165 verbose tarball /Users/craig/.npm/mojojs/0.6.2/package.tgz
166 verbose folder /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/package
167 silly lockFile ace79bb9-31260-0-8872596407309175-package /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/package
168 verbose lock /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/package /Users/craig/.npm/ace79bb9-31260-0-8872596407309175-package.lock
169 silly lockFile d08e44bb-aig-npm-mojojs-0-6-2-package-tgz /Users/craig/.npm/mojojs/0.6.2/package.tgz
170 verbose lock /Users/craig/.npm/mojojs/0.6.2/package.tgz /Users/craig/.npm/d08e44bb-aig-npm-mojojs-0-6-2-package-tgz.lock
171 silly lockFile ace79bb9-31260-0-8872596407309175-package /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/package
172 silly lockFile ace79bb9-31260-0-8872596407309175-package /var/folders/n1/r96x64mx6jzcbzkbz1ddrw6r0000gn/T/npm-45548/1377041931260-0.8872596407309175/package
173 silly lockFile d08e44bb-aig-npm-mojojs-0-6-2-package-tgz /Users/craig/.npm/mojojs/0.6.2/package.tgz
174 silly lockFile d08e44bb-aig-npm-mojojs-0-6-2-package-tgz /Users/craig/.npm/mojojs/0.6.2/package.tgz
175 silly lockFile b4d04381-s-craig-npm-mojojs-0-6-2-package /Users/craig/.npm/mojojs/0.6.2/package
176 verbose lock /Users/craig/.npm/mojojs/0.6.2/package /Users/craig/.npm/b4d04381-s-craig-npm-mojojs-0-6-2-package.lock
177 silly lockFile b4d04381-s-craig-npm-mojojs-0-6-2-package /Users/craig/.npm/mojojs/0.6.2/package
178 silly lockFile b4d04381-s-craig-npm-mojojs-0-6-2-package /Users/craig/.npm/mojojs/0.6.2/package
179 verbose tar unpack /Users/craig/.npm/mojojs/0.6.2/package.tgz
180 silly lockFile b4d04381-s-craig-npm-mojojs-0-6-2-package /Users/craig/.npm/mojojs/0.6.2/package
181 verbose lock /Users/craig/.npm/mojojs/0.6.2/package /Users/craig/.npm/b4d04381-s-craig-npm-mojojs-0-6-2-package.lock
182 silly lockFile d08e44bb-aig-npm-mojojs-0-6-2-package-tgz /Users/craig/.npm/mojojs/0.6.2/package.tgz
183 verbose lock /Users/craig/.npm/mojojs/0.6.2/package.tgz /Users/craig/.npm/d08e44bb-aig-npm-mojojs-0-6-2-package-tgz.lock
184 silly gunzTarPerm modes [ '755', '644' ]
185 silly gunzTarPerm extractEntry package.json
186 silly gunzTarPerm extractEntry .npmignore
187 silly gunzTarPerm extractEntry README.md
188 silly gunzTarPerm extractEntry index.js
189 silly gunzTarPerm extractEntry mesh.js
190 silly gunzTarPerm extractEntry .cupboard
191 silly gunzTarPerm extractEntry docs/README.md
192 silly gunzTarPerm extractEntry docs/adapters/README.md
193 silly gunzTarPerm extractEntry docs/brainstorm/README.md
194 silly gunzTarPerm extractEntry docs/data-binding/README.md
195 silly gunzTarPerm extractEntry docs/data-binding/collections.md
196 silly gunzTarPerm extractEntry docs/data-binding/objects.md
197 silly gunzTarPerm extractEntry docs/dev process/README.md
198 silly gunzTarPerm extractEntry docs/dev process/kn.md
199 silly gunzTarPerm extractEntry docs/mediator/README.md
200 silly gunzTarPerm extractEntry docs/views/README.md
201 silly gunzTarPerm extractEntry docs/views/decorators/README.md
202 silly gunzTarPerm extractEntry docs/views/sections/README.md
203 silly gunzTarPerm extractEntry docs/views/templates/README.md
204 silly gunzTarPerm extractEntry lib/index.js
205 silly gunzTarPerm extractEntry lib/bindable/inheritable.js
206 silly gunzTarPerm extractEntry lib/mediator/index.js
207 silly gunzTarPerm extractEntry lib/mediator/mediator.js
208 silly gunzTarPerm extractEntry lib/models/index.js
209 silly gunzTarPerm extractEntry lib/utils/async.js
210 silly gunzTarPerm extractEntry lib/utils/idGenerator.js
211 silly gunzTarPerm extractEntry lib/views/index.js
212 silly gunzTarPerm extractEntry lib/views/list.js
213 silly gunzTarPerm extractEntry lib/views/base/decorable.js
214 silly gunzTarPerm extractEntry lib/views/base/index.js
215 silly gunzTarPerm extractEntry lib/views/base/states.js
216 silly gunzTarPerm extractEntry lib/views/base/decor/attributes.js
217 silly gunzTarPerm extractEntry lib/views/base/decor/bindings.js
218 silly gunzTarPerm extractEntry lib/views/base/decor/selector.js
219 silly gunzTarPerm extractEntry lib/views/base/decor/events.js
220 silly gunzTarPerm extractEntry lib/views/base/decor/factory.js
221 silly gunzTarPerm extractEntry lib/views/base/decor/base.js
222 silly gunzTarPerm extractEntry lib/views/base/decor/preload.js
223 silly gunzTarPerm extractEntry lib/views/base/decor/transition.js
224 silly gunzTarPerm extractEntry lib/views/base/decor/paperclip.js
225 silly gunzTarPerm extractEntry lib/views/base/decor/sections/index.js
226 silly gunzTarPerm extractEntry lib/views/base/decor/sections/section.js
227 silly gunzTarPerm extractEntry lib/views/base/decor/sections2/index.js
228 silly gunzTarPerm extractEntry lib/views/base/decor/sections2/child/index.js
229 silly gunzTarPerm extractEntry lib/views/base/decor/sections2/list/index.js
230 silly gunzTarPerm extractEntry lib/views/base/decor/sections2/states/index.js
231 silly gunzTarPerm extractEntry lib/views/base/decor/sections2/states/state.js
232 silly gunzTarPerm extractEntry lib/views/base/decor/dragdrop/collection.js
233 silly gunzTarPerm extractEntry lib/views/base/decor/dragdrop/draggable.js
234 silly gunzTarPerm extractEntry lib/views/base/decor/dragdrop/droppable.js
235 silly gunzTarPerm extractEntry lib/views/list.coffee
236 silly gunzTarPerm extractEntry lib/views/states/index.js
237 silly gunzTarPerm extractEntry lib/views/states/state.js
238 silly gunzTarPerm extractEntry makefile
239 silly gunzTarPerm extractEntry src/bindable/inheritable.coffee
240 silly gunzTarPerm extractEntry src/index.coffee
241 silly gunzTarPerm extractEntry src/mediator/index.coffee
242 silly gunzTarPerm extractEntry src/mediator/mediator.coffee
243 silly gunzTarPerm extractEntry src/models/index.coffee
244 silly gunzTarPerm extractEntry src/utils/async.coffee
245 silly gunzTarPerm extractEntry src/utils/idGenerator.coffee
246 silly gunzTarPerm extractEntry src/views/base/decor/base.coffee
247 silly gunzTarPerm extractEntry src/views/base/decor/bindings.coffee
248 silly gunzTarPerm extractEntry src/views/base/decor/dragdrop/collection.coffee
249 silly gunzTarPerm extractEntry src/views/base/decor/dragdrop/draggable.coffee
250 silly gunzTarPerm extractEntry src/views/base/decor/dragdrop/droppable.coffee
251 silly gunzTarPerm extractEntry src/views/base/decor/events.coffee
252 silly gunzTarPerm extractEntry src/views/base/decor/factory.coffee
253 silly gunzTarPerm extractEntry src/views/base/decor/paperclip.coffee
254 silly gunzTarPerm extractEntry src/views/base/decor/preload.coffee
255 silly gunzTarPerm extractEntry src/views/base/decor/sections/index.coffee
256 silly gunzTarPerm extractEntry src/views/base/decor/sections/section.coffee
257 silly gunzTarPerm extractEntry src/views/base/decor/selector.coffee
258 silly gunzTarPerm extractEntry src/views/base/decor/transition.coffee
259 silly gunzTarPerm extractEntry src/views/base/decorable.coffee
260 silly gunzTarPerm extractEntry src/views/base/index.coffee
261 silly gunzTarPerm extractEntry src/views/base/states.coffee
262 silly gunzTarPerm extractEntry src/views/index.coffee
263 silly gunzTarPerm extractEntry src/views/list.coffee
264 silly gunzTarPerm extractEntry src/views/states/index.coffee
265 silly gunzTarPerm extractEntry src/views/states/state.coffee
266 verbose read json /Users/craig/.npm/mojojs/0.6.2/package/package.json
267 silly lockFile b4d04381-s-craig-npm-mojojs-0-6-2-package /Users/craig/.npm/mojojs/0.6.2/package
268 silly lockFile b4d04381-s-craig-npm-mojojs-0-6-2-package /Users/craig/.npm/mojojs/0.6.2/package
269 silly lockFile d08e44bb-aig-npm-mojojs-0-6-2-package-tgz /Users/craig/.npm/mojojs/0.6.2/package.tgz
270 silly lockFile d08e44bb-aig-npm-mojojs-0-6-2-package-tgz /Users/craig/.npm/mojojs/0.6.2/package.tgz
271 silly shasum updated bytes 34698
272 info shasum 2fddb6ee76043a23b4654c5575ff2097a3afe14b
272 info shasum /Users/craig/.npm/mojojs/0.6.2/package.tgz
273 verbose from cache /Users/craig/.npm/mojojs/0.6.2/package/package.json
274 verbose chmod /Users/craig/.npm/mojojs/0.6.2/package.tgz 644
275 verbose chown /Users/craig/.npm/mojojs/0.6.2/package.tgz [ 501, 20 ]
276 silly lockFile 3a52ce78- .
277 silly publish { name: 'mojojs',
277 silly publish   version: '0.6.2',
277 silly publish   description: 'test',
277 silly publish   main: './lib/index.js',
277 silly publish   jam:
277 silly publish    { baseUrl: 'public',
277 silly publish      packageDir: 'public/vendor',
277 silly publish      dependencies:
277 silly publish       { jquery: '1.7.x',
277 silly publish         'jquery-transit': '*',
277 silly publish         underscore: '*',
277 silly publish         events: '0.0.x',
277 silly publish         async: '0.2.x' },
277 silly publish      config:
277 silly publish       { repository: 'http://npm.classdojo.com:5984/jam',
277 silly publish         paths: [Object] } },
277 silly publish   repository: { type: 'git', url: 'http://npm.classdojo.com:5984/jam' },
277 silly publish   dependencies:
277 silly publish    { dref: '0.0.x',
277 silly publish      comerr: '0.0.x',
277 silly publish      sift: '0.0.x',
277 silly publish      cstep: '0.0.x',
277 silly publish      outcome: '0.0.x',
277 silly publish      step: '0.0.x',
277 silly publish      'type-component': '0.0.x',
277 silly publish      bindable: '0.2.x',
277 silly publish      disposable: '0.0.x',
277 silly publish      eventemitter2: '0.4.x',
277 silly publish      structr: '0.2.x',
277 silly publish      dolce: '0.0.x',
277 silly publish      mannequin: '0.1.x',
277 silly publish      hoist: '0.0.x',
277 silly publish      'pilot-block': '0.0.x',
277 silly publish      crema: '0.1.x',
277 silly publish      hooks: '0.3.x',
277 silly publish      flatstack: '0.0.x',
277 silly publish      asyngleton: '0.1.x',
277 silly publish      rivets: '0.3.x',
277 silly publish      paperclip: '0.1.x',
277 silly publish      toarray: '0.0.1',
277 silly publish      factories: '0.0.1',
277 silly publish      loaf: '0.0.5',
277 silly publish      nofactor: '0.0.21' },
277 silly publish   devDependencies:
277 silly publish    { 'coffee-script': '~1.6.3',
277 silly publish      amdify: '0.0.21',
277 silly publish      mesh: '~0.2.4',
277 silly publish      colors: '~0.6.0-1',
277 silly publish      async: '~0.2.9',
277 silly publish      mkdirp: '~0.3.5',
277 silly publish      underscore: '~1.4.4',
277 silly publish      optimist: '~0.6.0',
277 silly publish      request: '~2.21.0',
277 silly publish      less: '~1.4.0',
277 silly publish      'node-osx-notifier': '~0.1.0' },
277 silly publish   readme: '## [Docs](./docs)\n\nInspired by [jquery](http://jquery.com/), [backbone](http://backbonejs.org/), and [ember](http://emberjs.com/)\n\n\n## Render a Mojo view in Backbone\n\nYou might do this if your current site is written in Backbone and you don\'t want to switch to Mojo all at once.\n\n```coffeescript\ndefine ["app2/views/teacherScopeDropdown/index"], (TeacherScopeDropdownView) ->\n    \nSomeView = Backbone.View.extend\n    \n  initialize: () ->\n    teacherScopeDropdown = new TeacherScopeDropdownView()\n    teacherScopeDropdown.attach( $("#teacherScoper") )\n```\n\n\n## Create a new Mojo view\nIt\'s a lot like making a Backbone view\n\n```coffeescript\ndefine ["mojo"], (mojo) ->\n      \n  class SweetMojoView extends mojo.View\n  \n    ###\n     called immediately after .attach() is called, and before any\n     asynchronous loading functions are called - such as templates, and sections.\n    ###\n    \n    _onLoad: () ->\n      super() # super is used in mojo.View - make sure to call it!\n      console.log "mojo is cool"\n      \n    ###\n     called after the view has loaded, including all the templates\n    ###\n    \n    _onLoaded: () ->\n      super()\n     \n    ###\n     called just before the view is attached to the DOM. This is where\n     data-bindings are wired up.\n    ###\n    \n    _onRender: () ->\n      super() \n    \n    ###\n     called after the view has rendered completely. At this point, it\'s \n     ready to be attached to the DOM\n    ###\n    \n    _onRendered: () ->\n      super()\n      \n    \n    ### \n     called just before the view is added to the DOM. This is where decorators\n     such as transitions get fired.\n    ###\n    \n    _onDisplay: () ->\n      super()\n     \n    ###\n     called after the view is added, to the dom, and all decorators have finished, such\n     as transitions.\n    ###\n    \n    _onDisplayed: () ->\n      super()\n     \n    ###\n     called just before the view is removed from the DOM. Also keep in mind that decorators\n     such as transitions might also be triggered here.\n    ###\n    \n    _onRemove: () ->\n      super()\n    \n    ###\n     called after the view has been completely removed from the DOM. At this point, transitions\n     have also finished.\n    ###\n    \n    _onRemoved: () ->\n      super()\n        \n\n    \n```\n\n\n\n## Paperclip + Mojo.js\n\n[Paperclip](/classdojo/paperclip.js) is the templating engine used for mojo.js. Here\'s how you use it:\n\n```coffeescript\n\ndefine ["mojo", "./sweetMojo.pc"], (mojo, sweetMojoTemplate) ->\n    \n  class SweetMojoView extends mojo.View\n      \n    ###\n    ###\n        \n    paper: sweetMojoTemplate\n        \n```\n\nKeep in mind that paperclip templates are compiled into javascript - they\'re functions, so you can mix & match your templates. For example:\n\n```coffeescript\ndefine ["mojo", "./sweetMojo.pc", "./sweetMojo2.pc"], (mojo, sweetMojoTemplate, sweetMojo2Template) ->\n    \n  class SweetMojoView extends mojo.View\n      \n    ###\n    ###\n        \n    paper: (builder) =>\n    \n      # builder is an internal utility which builds on the paperclip template\n      # don\'t worry about physically interacting with it - just pass it along\n      # to whatever template you want to use.\n      if @get("model.type") is "something"\n        return sweetMojoTemplate(builder)\n      else\n        return sweetMojo2Template(builder)\n        \n```\n\n### Events in Paperclip\nUse html attribute "data-bind", like so:\n\n```html\n<a class="button" data-bind="{{ onClick: doSomething() }}">Click me!</a>\n```\n\n\n\n## Subviews (sections) with Mojo\n\nSections are sub-views which are used in a template file. Right now there are `lists`, and `states`. You can also\nadd a view class as a section in an html template. Here\'s a basic example demonstrating all 3 types of sections:\n\n```coffeescript\n  \n# Notice how we include paperclip template and sweetMojoView\ndefine ["mojo", "./sweetMojoView", "./containerTemplate.pc"], (mojo, SweetMojoView, containerTemplate) ->\n    \n  class SomeContainerView extends mojo.View\n      \n    ###\n    ###\n        \n    paper: containerTemplate\n        \n    ###\n    ###\n        \n    sections: \n      \n      # child view\n      main:  SweetMojoView\n      \n      # list view\n      sweetMojos: \n        type: "list"\n        source: [model1, model2, model3]\n        modelViewClass: SweetMojoView\n        \n      # state view\n      pages:\n        type: "state"\n        index: 0 # the initial index for the state\n        views: [\n         { class: SweetMojoView, anyPropertyYouWantBaby: "no" },\n         { class: SweetMojoView }\n        ]\n      \n      \n```\n\nOnce you\'ve specified your view sections, you\'ll need to define them in the view\'s template. The above example might\nbe something like:\n\n```html\n<div>\n    {{ html: sections.main }} <!-- SweetMojoView is added here-->\n    \n    {{ html: sections.sweetMojos }} <!-- list view here -->\n    \n    {{ html: pages }} <!-- states view here -->\n</div>\n```\n\nKeep in mind that `{{ html: content }}` tells paperclip to treat the target content as html. If you ommit `html:`, the data-bound\ncontent will be sanitized for html entities, and all you\'ll see is html code.\n\n### Children\n\nSectons can also be view classes. Here\'s an example:\n\n```coffeescript\n# assuming you have profileInfoView, and newsFeedView defined\nclass SidebarView extends mojo.View\n    paper: sidebarTemplate\n    sections:\n        profile: ProfileInfoView\n        newsFeed: NewsFeedView\n\n```\n\nIn your sidebar template file:\n\n```html\n<div>\n    {{ html: sections.profile }}\n    {{ html: sections.newsFeed }}\n</div>\n```\n\n### Lists\n\nHere are the basic options for a list section:\n\n- `type` (required) - the type of section - must be `list`\n- `source` (required) - the source of the list \n- `modelViewClass` (required) - the view class to use \n- `modelViewFactory` - used instead of the modelViewClass. Use this if you might have different views within a list\n- `filter` - filters out the source collection for items to display in the section\n\nA basic example of a list section:\n\n```coffeescript\n\ndefine ["mojo", "./person.pc", "./people.pc"], (mojo, personTemplate, peopleTemplate) ->\n\n    people = new bindable.Collection [\n        new bindable.Object({\n            name: "Joe",\n            age: 18\n        }),\n        new bindable.Object({\n            name: "John",\n            age: 21\n        })\n    ]\n    \n    class PersonView extends mojo.View\n        paper: personTemplate\n    \n    class PeopleView extends mojo.View\n    \n        paper: peopleTemplate\n        \n        sections:\n            people: \n                type: "list"\n                source: people\n                modelViewClass: PersonView\n            \n\n```\n\nIn your `people` template, you\'ll need to again, specify where you want the section to go:\n\n```html\nList of people:\n<ul>{{ html: sections.people }}</ul>\n```\n\nIn your `person` template, you can write something like this:\n\n```\n<li>{{ model.name }} is {{ model.age }} years old</li>\n```\n\nNote that the `people` section automatically adds a `model` property to each `PersonView` created in the list. If the above\ncode were to be rendered in a browser, here\'s what you\'d get:\n\n```html\nList of people:\n<ul>\n    <li>Joe is 18 years old</li>\n    <li>John 21 years old</li>\n</ul>\n```\n\n#### Filtering Lists\n\nYou can also filter lists pretty easily. Here\'s an example using our `people` example:\n\n```coffeescript\nclass PeopleView extends mojo.View\n    \n    paper: peopleTemplate\n        \n    sections:\n        people: \n            type: "list"\n            source: people\n            modelViewClass: PersonView\n            filter: (person) -> person.get("age") > 20\n```\n\nThe above example will only display people who\'s age is greater than 20. If we use the same model used above, the\nexpected HTML outcome would be:\n\n```html\nList of people:\n<ul>\n    <li>John 21 years old</li>\n</ul>\n```\n\nNote that lists are *automatically updated* if any object within the source collection changes. So if you change\nJoe\'s age to 25, the people list will automatically update to include Joe as a person who\'s older than 21.\n\n\n#### using modelViewFactory\n\nThere might be some cases where a list has an object that might need a different view. Here\'s a basic example\n\n```coffeescript\nclass RequestView extends mojo.View\n    paper: requestTemplate\n    \nclass MessageView extends mojo.View\n    paper: messageTemplate\n    \nclass DefaultView extends mojo.View\n    paper: defaultTemplate\n    \navailableTemplates = \n    message: MessageView\n    RequestView: RequestView\n    default: DefaultView\n    \nclass NotificationsView extends mojo.View\n    sections:\n        notifications:\n            source: notificationsCollection\n            modelViewFactory: (options) -> \n                viewClass = availableTemplates[options.model.get("type")] or availableTemplates.default\n                new viewClass options\n```\n\n### States\n\n- `type` - must be `states`\n- `index` - the initial index to start on - this is `0` by default\n- `views` - the views to use for each state\n    - the only expected property here is `class`, but you can add anything you want as \n    - metadata for each state.\n\nCombining what we know so far \'bout `children`, and `lists`, here\'s a realistic example of using the `states` \nsection:\n\n```coffeescript\ndefine ["mojo", \n    "./main.pc", \n    "./tabs.pc", \n    "./tab.pc",\n    "./pages.pc"], (mojo, mainTemplate, \n    tabsTemplate, tabTemplate, pagesTemplate) ->\n\n    class PagesView extends mojo.View\n    \n        ###\n        ###\n        \n        paper: pagesTemplate\n        \n        ###\n        ###\n        \n        sections:\n            pages: \n                type: "states"\n                index: 0\n                views: [\n                    { class: ContactView , label: "Contact" },\n                    { class: HomeView    , label: "Home"    }\n                ]\n                    \n    class TabView extends mojo.View\n        paper: tabTemplate\n        \n        ###\n         selects the current state\n        ###\n        \n        select: () -> @get("model").select()\n                \n    \n    class TabsView extends mojo.View\n    \n        ###\n        ###\n        \n        paper: tabsTemplate\n        \n        ###\n        ###\n        \n        sections:\n            pages: \n                type: "list"\n                source: "states"\n                modelViewClass: TabView\n                \n                \n    class MainView extends mojo.View\n    \n        ###\n        ###\n        \n        paper: mainTemplate\n        \n        ###\n         create a binding from the pages states (source), to the tabs pages property.\n        ###\n        \n        bindings:\n            "sections.pages.source": "sections.tabs.pages"\n        \n        ###\n        ###\n        \n        sections:\n            tabs: TabsView\n            pages: PagesView\n        \n```\n\nmain.pc:\n```html\n\nCurrent Page: {{ sections.pages.currentState.label  }}\n{{ html: sections.tabs }}\n{{ html: sections.pages }}\n```\n\ntab.pc:\n```html\n<li \n    data-bind="{{\n        onClick: select()\n    }}">\n    {{ model.label }}\n</li>\n```\n\ntabs.pc:\n```html\n<ul>\n    {{ html: sections.pages }}\n</ul>\n```\n\npages.pc:\n```html\n{{ html: sections.pages }} \n```\n\n#### States API\n\n##### state states.currentState\n\nthe current state\n\n##### states.next()\n\nmoves to the next state index \n\n##### states.prev()\n\nmoves to the previous state index\n\n##### states.move(position = 1)\n\nmoves the states index +- the given position\n\n##### states.select(index)\n\nselects a state based on the index\n\n##### states.source\n\nstores all the state objects\n\n##### states.index\n\nthe current state index\n\n    \n( we should be exhaustive here about what you can do with data-bind ) \n\n\n\n### Render Mojo properties in Paperclip\n\nYou could render a property of the model:\n\n    <h1> {{ model.title }} </h1>\n    \nOr, a property of the view:\n  \n    <p> {{ propertyName }} </p>\n    \nOr even the results of a function:\n\n    <p> {{ getParagraphText() }} </p>\n\n\n\n### Computed Properties in Mojo Views\nUse "bindings" to make computed properties\n\n```coffeescript\nbindings:\n    # Compute a property called numUnviewed by iterating over the "viewed" property of notifications\n    "notifications.@each.viewed": \n      "numUnviewed":\n        "map": (viewed) -> \n          viewed.filter((viewed) -> not viewed).length\n          \n    # Compute full name - update if either firstName or lastName change\n    "firstName, lastName":\n      "fullName": \n        map: (firstName, lastName) -> [firstName, lastName].join(" ")\n```\n\nIn a paperclip template, you reference computed properties like normal properties:\n    <p> Hi, {{ fullName }}!  You have {{ numUnviewed  }} notifications </p>\n\n\n\n### Show and Hide Paperclip elements based on Mojo view properties\n\nShow a button based on a Mojo model property. \n\n    <a class="button" data-bind="{{ show:model.isShareable }}"> Share! </a>\n\nShow an empty state based on a model function\n\n```html\n<!-- Empty state -->\n<div class="no-monsters" data-bind="{{ show:monsters.length == 0 }}">\n  <h1> No Monsters Yet! </h1>\n</div>\n    \n<!-- Non-empty state -->\n<div class="has-monsters" data-bind="{{ show:monsters.length > 0 }}">\n  {{ html:sections.monsterList }}\n</div>\n```\n\n### Displaying a list of items using "sections"\n\nYou can do some neat stuff with sections.  Por ejemplo...\n\n    sections:\n      monsterList:\n        type:             "list"\n        modelViewClass:   MonsterListItemView\n        source:           "monsters"\n\nThen, in your paperclip template, you could display your monster list like so:\n\n    {{ html:sections.monsterList }}\n    \n*Note:  in your MosterListItemView class, "model" will automagically be set to the model that was passed in from the "source" property.\n\n\n\n### Use a different Mojo view for each model in a collection\nFor instance, if we want a list of notifications, but want to use a different Mojo view to handle the logic for the different types of notifications:\n```coffeescript\nsections:\n  notifications:\n    type: "list"\n    source:"notifications"\n    modelViewFactory:  (options) ->\n        viewClass = notificationViews[options.model.get("type")] or notificationViews.default\n        new viewClass { notification: options.model }\n```\n\n\n### Accessing properties of Mojo views\n```coffeescript\n# Define a property\nnotifications:  notificationCollection\n\n# access notifications property\n@get("notifications")\n\n\n_markAllViewed: () ->\n        @get("notifications").each (notification) -> \n          notification.set "viewed", true\n```\n\n\n### Setting properties in Mojo views with Paperclip\nLet\'s show how you can use a Paperclip template and Mojo view to set a property of a model.\n\nPaperclip:\n```html\n<a class="button" data-bind="{{ onClick:_updateConnectionStatus() }}"> Connect! </a>\n````\n\nMojo view\n```coffeescript\n_updateConnectionStatus: () =>\n  @set "model.connectionStatus", "connected"\n```\n\n\n### Event bubbling in Mojo\nEvents will not bubble by default.  If an event is emitted within a child view, you\'ll need to explicitly bubble the event to any parent views:\n```coffeescript\nsomeEventHandler: () =>\n  @bubble "eventNameToPropagate"\n```\n\n\n### Working with Popups in Mojo\nThere is a base class that handles modals in /base/modal.  \n```coffeescript\ndefine ["mojo", "./base/modal", "./happyMojoModalTemplate.pc], (mojo, modalView, happyMojoModalTemplate) ->\n\n  class HappyMojoModal extends modalView\n  \n    paper: happyMojoModalTemplate\n    \n    # a static method to show a popup\n    # Just call this and pass in a model to render the popup\n    @show: (model) ->\n      popup = new ShareClassesModal()\n      popup.set "classroom", model\n      mojo.mediator.execute("popup", popup)\n\n```\n\n\n### State Vies in Mojo (incomplete)\n\nState views are helpful for doing things like tabs.  Let\'s look at howo\nFirst, our view:\n\n    sections:\n      tabContent:\n        type:             "states"\n        index:            0\n        views: [\n          { class: FirstTabView },\n          { class: SecondTabView }\n',
277 silly publish   readmeFilename: 'README.md',
277 silly publish   _id: 'mojojs@0.6.2',
277 silly publish   dist: { shasum: '2fddb6ee76043a23b4654c5575ff2097a3afe14b' },
277 silly publish   _from: '.' }
278 verbose url raw mojojs
279 verbose url resolving [ 'http://registry.npmjs.org/', './mojojs' ]
280 verbose url resolved http://registry.npmjs.org/mojojs
281 info trying registry request attempt 1 at 16:39:02
282 http PUT http://registry.npmjs.org/mojojs
283 http 409 http://registry.npmjs.org/mojojs
284 verbose url raw mojojs
285 verbose url resolving [ 'http://registry.npmjs.org/', './mojojs' ]
286 verbose url resolved http://registry.npmjs.org/mojojs
287 info trying registry request attempt 1 at 16:39:02
288 http GET http://registry.npmjs.org/mojojs
289 http 200 http://registry.npmjs.org/mojojs
290 error publish fail Cannot publish over existing version.
290 error publish fail Update the 'version' field in package.json and try again.
290 error publish fail
290 error publish fail If the previous version was published in error, see:
290 error publish fail     npm help unpublish
290 error publish fail
290 error publish fail To automatically increment version numbers, see:
290 error publish fail     npm help version
291 error System Darwin 12.4.0
292 error command "node" "/usr/local/bin/npm" "publish"
293 error cwd /Users/craig/Developer/Jobs/classdojo/mojo
294 error node -v v0.10.5
295 error npm -v 1.2.18
296 error code EPUBLISHCONFLICT
297 verbose exit [ 1, true ]
