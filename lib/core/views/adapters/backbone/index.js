// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["../base/index", "./view", "./collection", "./model"], function(BaseAdapter, BackboneWrapperView, BackboneWrapperCollection, BackboneWrapperModel) {
    var BackboneAdapter, _ref;

    return BackboneAdapter = (function(_super) {
      __extends(BackboneAdapter, _super);

      function BackboneAdapter() {
        _ref = BackboneAdapter.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      /*
      */


      BackboneAdapter.prototype.getModel = function(value) {
        if (!value.idAttribute) {
          return false;
        }
        return new BackboneWrapperModel(value);
      };

      /*
      */


      BackboneAdapter.prototype.getCollection = function(value) {
        if (!value._byId || !value.models) {
          return false;
        }
        return new BackboneWrapperCollection(value);
      };

      /*
      */


      BackboneAdapter.prototype.getViewClass = function(clazz) {
        var proto, _ref1;

        proto = clazz.prototype;
        if (!proto.tagName || !proto.$) {
          return false;
        }
        return (function(_super1) {
          __extends(_Class, _super1);

          function _Class() {
            _ref1 = _Class.__super__.constructor.apply(this, arguments);
            return _ref1;
          }

          _Class.prototype.viewClass = clazz;

          return _Class;

        })(BackboneWrapperView);
      };

      return BackboneAdapter;

    })(BaseAdapter);
  });

}).call(this);
