


define(["require", "modules/bindable/lib/core/utils", "async"], function(require) {

    var __dirname = "modules/bindable/lib/collection/setters",
    __filename    = "modules/bindable/lib/collection/setters/base.js",
    module        = { exports: {} },
    exports       = module.exports,
    define        = undefined,
    window        = exports,
    global        = window;

    

    // Generated by CoffeeScript 1.6.2
(function() {
  var async, utils;

  utils = require("modules/bindable/lib/core/utils");

  async = require("async");

  module.exports = (function() {
    /*
    */
    function _Class(binding, target) {
      this.binding = binding;
      this.target = target;
      this._transformer = binding.transform();
      this._filter = binding.filter();
      this.init();
    }

    /*
    */


    _Class.prototype.init = function() {};

    /*
    */


    _Class.prototype.dispose = function() {};

    /*
    */


    _Class.prototype.change = function(event, item, oldItem) {
      if (event === "reset") {
        return this._changeItems(event, item, oldItem);
      } else {
        return this._changeItem(event, item, oldItem);
      }
    };

    /*
    */


    _Class.prototype._changeItem = function(event, item, oldItem) {
      if (this._filter) {
        if (!this._filter(item)) {
          return;
        }
      }
      return this._change(event, this.__transform("to", item), oldItem);
    };

    /*
    */


    _Class.prototype._changeItems = function(event, items, oldItems) {
      var changed, i, item, _i, _len;

      if (this._filter) {
        changed = items.filter(this._filter);
      } else {
        changed = items.concat();
      }
      for (i = _i = 0, _len = changed.length; _i < _len; i = ++_i) {
        item = changed[i];
        changed[i] = this.__transform("to", item);
      }
      return this._change(events, changed, oldItems);
    };

    /*
    */


    _Class.prototype._change = function(event, item) {};

    /*
    */


    _Class.prototype.bothWays = function() {};

    /*
    */


    _Class.prototype.__transform = function(method, value) {
      return utils.tryTransform(this._transformer, method, value);
    };

    return _Class;

  })();

}).call(this);


    return module.exports;
});