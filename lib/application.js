// Generated by CoffeeScript 1.6.3
var Application, bindable, decorators, defaultComponents, type, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

bindable = require("bindable");

_ = require("underscore");

type = require("type-component");

defaultComponents = require("./plugins/defaultComponents");

decorators = require("./plugins/decor");

/*
 Main entry point for mojo applications


 app = new Application()

 app.use(router)
 app.use(mediator)

 app.
  registerClass("mainView", MainView).
  createObject("mainView").
  attach($("#application"))
*/


Application = (function(_super) {
  __extends(Application, _super);

  /*
  */


  function Application() {
    Application.__super__.constructor.call(this, this);
    this.models = new bindable.Object();
    this.use(defaultComponents);
    this.use(decorators);
  }

  /*
  */


  Application.prototype.use = function(module) {
    return module(this);
  };

  /*
  */


  Application.prototype.registerClass = function(name, clazz) {
    var components;
    if (type(name) === "object" && arguments.length === 1) {
      components = name;
      for (name in components) {
        this.registerClass(name, components[name]);
      }
      return;
    }
    this.set("models.classes." + name, clazz);
    return this;
  };

  /*
  */


  Application.prototype.createObject = function(name, options) {
    var clazz;
    if (options == null) {
      options = {};
    }
    if (type(name) === "function") {
      clazz = name;
    } else {
      clazz = this.get("models.classes." + name);
      if (!clazz) {
        throw new Error("class '" + name + "' doesn't exist");
      }
    }
    return new clazz(_.extend(options, {
      application: this
    }));
  };

  return Application;

})(bindable.Object);

module.exports = Application;
