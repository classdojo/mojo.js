// Generated by CoffeeScript 1.6.3
var SectionsDecorator, bindable, type;

type = require("type-component");

bindable = require("bindable");

SectionsDecorator = (function() {
  /*
  */

  function SectionsDecorator(view, sectionOptions) {
    this.view = view;
    this.sectionOptions = sectionOptions;
    this.init();
  }

  /*
  */


  SectionsDecorator.prototype.init = function() {
    var sectionName, _results;
    _results = [];
    for (sectionName in this.sectionOptions) {
      _results.push(this._addSection(sectionName, this._fixOptions(this.sectionOptions[sectionName])));
    }
    return _results;
  };

  /*
  */


  SectionsDecorator.prototype._addSection = function(name, options) {
    var view,
      _this = this;
    view = this._createSectionView(options);
    view.once("initialize", function() {
      return view.decorate(options);
    });
    view.createFragment = function() {
      if (view._createdFragment) {
        return view.section.toFragment();
      }
      view._createdFragment = true;
      _this.view.callstack.unshift(view.render);
      return view.section.toFragment();
    };
    return this.view.setChild(name, view);
  };

  /*
  */


  SectionsDecorator.prototype._fixOptions = function(options) {
    if (!options) {
      throw new Error("'sections' is invalid for view " + (this.view.path()));
    }
    if (!options.type) {
      options = {
        type: options
      };
    }
    return options;
  };

  /*
  */


  SectionsDecorator.prototype._createSectionView = function(options) {
    var clazz;
    if (type(options.type) === "object") {
      return options.type;
    } else {
      clazz = this._getSectionClass(options);
      return new clazz(options);
    }
  };

  /*
  */


  SectionsDecorator.prototype._getSectionClass = function(options) {
    var t;
    if ((t = type(options.type)) === "function") {
      return options.type;
    } else if (t === "string") {
      return this.view.application.getViewClass(options.type);
    } else {
      throw new Error("cannot get section class for type " + t);
    }
  };

  /*
  */


  SectionsDecorator.priority = "display";

  SectionsDecorator.getOptions = function(view) {
    return view.sections;
  };

  SectionsDecorator.decorate = function(view, options) {
    return new SectionsDecorator(view, options);
  };

  return SectionsDecorator;

})();

module.exports = SectionsDecorator;
