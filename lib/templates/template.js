// Generated by CoffeeScript 1.6.3
var Template, asyngleton, outcome;

asyngleton = require("asyngleton");

outcome = require("outcome");

Template = (function() {
  /*
  */

  function Template(options) {
    this.options = options;
    this._engine = options.engine;
    this._baseDir = options.directory;
    this.source = options.source;
    this.extension = options.extension;
    this.factory = options.factory;
    this.name = options.name;
  }

  /*
   renders the template with the given options
  */


  Template.prototype.render = function(options, callback) {
    var _this = this;
    this.load(function() {
      return _this._renderer.render(options, callback);
    });
    return this;
  };

  /*
   Loads the template source
  */


  Template.prototype.load = asyngleton(function(callback) {
    var _this = this;
    this.factory.loadEngine(this._engine, outcome.s(function(engine) {
      var onSource;
      onSource = function(source) {
        _this.source = source;
        _this._renderer = engine.compile(source);
        return callback(null, source);
      };
      if (_this.source) {
        return onSource(_this.source);
      }
      return _this._loadFromFile(onSource);
    }));
    return this;
  });

  /*
  */


  Template.prototype._loadFromFile = function(callback) {
    return require(["text!" + this._baseDir + "/" + this.name + "." + (this.extension || engine.extension)], callback);
  };

  return Template;

})();

module.exports = Template;
