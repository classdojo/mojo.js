// Generated by CoffeeScript 1.6.2
(function() {
  var AbstractFactory, BaseFactory,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseFactory = require("./base");

  /*
   Abstract factory combines multiple factories into one.
  */


  AbstractFactory = (function(_super) {
    __extends(AbstractFactory, _super);

    /*
    */


    function AbstractFactory() {
      AbstractFactory.__super__.constructor.call(this);
    }

    /*
    */


    AbstractFactory.prototype.register = function() {};

    return AbstractFactory;

  })(BaseFactory);

  module.exports = AbstractFactory;

}).call(this);
