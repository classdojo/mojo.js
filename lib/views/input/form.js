// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["../base", "../../templates/factory", "mannequin"], function(BaseView, templates, mannequin) {
    /*
    */

    var FormView, _ref;

    return FormView = (function(_super) {
      __extends(FormView, _super);

      function FormView() {
        this._onLoaded = __bind(this._onLoaded, this);
        this._showErrorMessage = __bind(this._showErrorMessage, this);
        this._onSubmit = __bind(this._onSubmit, this);
        this._onDisplay = __bind(this._onDisplay, this);
        this.submit = __bind(this.submit, this);        _ref = FormView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      /*
      */


      FormView.prototype.modelClass = null;

      /*
      */


      FormView.prototype.template = templates.fromSource("<form></form>");

      /*
      */


      FormView.prototype.submit = function(callback) {
        var model,
          _this = this;

        if (callback == null) {
          callback = (function() {});
        }
        model = this._model();
        model.set(this.get("data"));
        return model.save(function(err, result) {
          if (err) {
            callback(err);
            return _this._showErrorMessage(err);
          }
          return _this.emit("complete");
        });
      };

      /*
      */


      FormView.prototype._onDisplay = function() {
        var submitElement,
          _this = this;

        FormView.__super__._onDisplay.call(this);
        console.log("DISPLAY");
        submitElement = this.get("submitElement");
        if (submitElement) {
          this.$(submitElement).bind("click", this._onSubmit);
        }
        this.set("data", {});
        this.el.bind("data", function(e, d) {
          e.stopPropagation();
          _this.set("data." + d.name, d.value);
          return _this._validate();
        });
        return this._validate();
      };

      /*
      */


      FormView.prototype._onSubmit = function(event) {
        return this.submit();
      };

      /*
      */


      FormView.prototype._validate = function() {
        var _this = this;

        this._model().set(this.get("data"));
        return this._model().validate(function(err) {
          return _this._toggleValidity(!err);
        });
      };

      /*
       useful for enabling / disabling a button
      */


      FormView.prototype._toggleValidity = function(valid) {
        return this.emit("valid", valid);
      };

      /*
      */


      FormView.prototype._showErrorMessage = function() {};

      /*
      */


      FormView.prototype._onLoaded = function() {
        return FormView.__super__._onLoaded.call(this);
      };

      /*
      */


      FormView.prototype._model = function() {
        var clazz, model;

        model = this.get("model");
        if (model) {
          return model;
        }
        clazz = this.get("modelClass");
        model = new clazz;
        this.set("model", model);
        return model;
      };

      return FormView;

    })(BaseView);
  });

}).call(this);
