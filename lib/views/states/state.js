// Generated by CoffeeScript 1.6.3
var State, bindable, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

bindable = require("bindable");

_ = require("underscore");

State = (function(_super) {
  __extends(State, _super);

  /*
  */


  function State(states, options, index) {
    var ops;
    this.states = states;
    ops = {};
    if (!options["class"]) {
      ops["class"] = options;
    } else {
      ops = options;
    }
    ops.index = index;
    ops.selected = false;
    ops._id = options.name || Math.random();
    State.__super__.constructor.call(this, ops);
  }

  /*
  */


  State.prototype.select = function() {
    return this.states.select(this);
  };

  /*
  */


  State.prototype.hide = function() {
    this._view.section.hide();
    return this._view.set("visible", false);
  };

  /*
  */


  State.prototype.show = function() {
    this._view.section.show();
    return this._view.set("visible", true);
  };

  /*
  */


  State.prototype.hasView = function() {
    return !!this._view;
  };

  /*
  */


  State.prototype.getView = function() {
    var clazz;
    if (this._view) {
      return this._view;
    }
    clazz = this.get("class");
    return this._view = new clazz();
  };

  return State;

})(bindable.Object);

module.exports = State;
