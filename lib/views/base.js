// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["./internal", "./decor/factory"], function(InternalView, DecorFactory) {
    var BaseView, _ref;

    return BaseView = (function(_super) {
      __extends(BaseView, _super);

      function BaseView() {
        _ref = BaseView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      /*
       expose this so third-party modules can add a decorator
      */


      BaseView.addDecoratorClass = DecorFactory.addDecoratorClass;

      BaseView.prototype._initDecor = function() {
        BaseView.__super__._initDecor.call(this);
        return DecorFactory.setup(this);
      };

      return BaseView;

    })(InternalView);
  });

}).call(this);
