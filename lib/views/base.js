// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["jquery", "events", "bindable", "./collection", "../utils/idGenerator", "outcome", "dref", "underscore", "./decor/facade", "asyngleton", "../models/locator", "../utils/compose", "../utils/async", "pilot-block", "toarray", "./states"], function($, events, bindable, ViewCollection, generateId, outcome, dref, _, ViewDecorator, asyngleton, modelLocator, compose, async, pilot, toarray, ViewStates) {
    var BaseView;

    return BaseView = (function(_super) {
      __extends(BaseView, _super);

      /*
      */


      function BaseView(data) {
        if (data == null) {
          data = {};
        }
        this._onRemoved = __bind(this._onRemoved, this);
        this._onRemove = __bind(this._onRemove, this);
        this._onDisplayed = __bind(this._onDisplayed, this);
        this._onDisplay = __bind(this._onDisplay, this);
        this._onRendered = __bind(this._onRendered, this);
        this._onRender = __bind(this._onRender, this);
        this._onLoaded = __bind(this._onLoaded, this);
        this._onLoad = __bind(this._onLoad, this);
        this.dispose = __bind(this.dispose, this);
        this._id = dref.get(data, "_id") || dref.get(data.item || {}, "_id") || generateId();
        this.section = pilot.createSection();
        data.view = this;
        data.modelLocator = modelLocator;
        BaseView.__super__.constructor.call(this, data);
        this.decorators = new ViewCollection();
        this.init();
        this._listen();
        ViewDecorator.setup(this);
      }

      /*
      */


      BaseView.prototype.load = function(next) {
        return this.decorators.load(next);
      };

      BaseView.prototype.render = function(next) {
        return this.decorators.render(next);
      };

      BaseView.prototype.display = function(next) {
        return this.decorators.display(next);
      };

      BaseView.prototype.remove = function(next) {
        return this.decorators.remove(next);
      };

      /*
      */


      BaseView.prototype.init = function() {};

      /*
       If the key doesn't exist, then inherit it from the parent
      */


      BaseView.prototype.get = function(key) {
        var _ref, _ref1;

        return (_ref = BaseView.__super__.get.call(this, key)) != null ? _ref : (_ref1 = this._parent) != null ? _ref1.get(key) : void 0;
      };

      /*
      */


      BaseView.prototype._listen = function() {
        return this.decorators.on({
          load: this._onLoad,
          loaded: this._onLoaded,
          render: this._onRender,
          rendered: this._onRendered,
          display: this._onDisplay,
          displayed: this._onDisplayed,
          remove: this._onRemove,
          removed: this._onRemoved
        });
      };

      /*
       returns a search for a particular element
      */


      BaseView.prototype.$ = function(search) {
        var el;

        el = $(this.section.elements);
        if (arguments.length) {
          return el.find(search);
        }
        return el;
      };

      /*
       attaches to an element to the DOM
      */


      BaseView.prototype.attach = function(element, callback) {
        var _this = this;

        this._domElement = element[0] || element;
        this.decorators.once("display", function() {
          return _this.section.replaceChildren(_this._domElement);
        });
        return this.display(callback);
      };

      /*
      */


      BaseView.prototype.linkChild = function() {
        var child, _i, _len;

        for (_i = 0, _len = arguments.length; _i < _len; _i++) {
          child = arguments[_i];
          child._parent = this;
        }
        return this;
      };

      /*
      */


      BaseView.prototype.emit = function() {
        var el;

        BaseView.__super__.emit.apply(this, arguments);
        arguments[0] = arguments[0].toLowerCase();
        el = this.$();
        return el.trigger.apply(el, arguments);
      };

      /*
      */


      BaseView.prototype.dispose = function() {
        var el;

        el = this.$();
        el.unbind("*");
        this.section.dispose();
        return BaseView.__super__.dispose.call(this);
      };

      /*
      */


      BaseView.prototype._onLoad = function() {
        return this.currentState = ViewStates.LOADING;
      };

      BaseView.prototype._onLoaded = function() {
        var _ref;

        if (((_ref = this._parent) != null ? _ref.currentState : void 0) === ViewStates.LOADING) {
          return;
        }
        return this.section.updateChildren();
      };

      BaseView.prototype._onRender = function() {
        return this.currentState = ViewStates.RENDERING;
      };

      BaseView.prototype._onRendered = function() {};

      BaseView.prototype._onDisplay = function() {
        return this.currentState = ViewStates.DISPLAYING;
      };

      BaseView.prototype._onDisplayed = function() {};

      BaseView.prototype._onRemove = function() {
        return this.currentState = ViewStates.REMOVING;
      };

      BaseView.prototype._onRemoved = function() {
        var _ref;

        if (((_ref = this._parent) != null ? _ref.currentState : void 0) === ViewStates.REMOVING) {
          return;
        }
        return this.dispose();
      };

      return BaseView;

    })(bindable.Object);
  });

}).call(this);
