// Generated by CoffeeScript 1.6.3
var InheritDecorator, toarray,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

toarray = require("toarray");

InheritDecorator = (function() {
  /*
  */

  function InheritDecorator(view, inherit) {
    this.view = view;
    this.inherit = inherit;
    this.render = __bind(this.render, this);
    view.once("render", this.render);
  }

  /*
  */


  InheritDecorator.prototype.render = function() {
    var inherit;
    if (!this.view._parent) {
      return;
    }
    console.log(this.view.path());
    return this._bindings = (function() {
      var _i, _len, _ref, _results,
        _this = this;
      _ref = this.inherit;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        inherit = _ref[_i];
        _results.push((function(inherit) {
          return _this.view._parent.bind(inherit).to(_this.view, inherit).now();
        })(inherit));
      }
      return _results;
    }).call(this);
  };

  /*
  */


  InheritDecorator.getOptions = function(view) {
    if (view.inherit) {
      return toarray(view.inherit);
    } else {
      return void 0;
    }
  };

  InheritDecorator.decorate = function(view, inherit) {
    return new InheritDecorator(view, inherit);
  };

  return InheritDecorator;

})();

module.exports = InheritDecorator;
