// Generated by CoffeeScript 1.6.3
var GlobalDecorator, toarray, _,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

toarray = require("toarray");

_ = require("underscore");

GlobalDecorator = (function() {
  /*
  */

  function GlobalDecorator(view) {
    this.view = view;
    this._setChild = __bind(this._setChild, this);
    this._setGlobals = __bind(this._setGlobals, this);
    this.global = [];
    this.view.bind("global").to(this._setGlobals).now();
    this.view.once("child", this._setChild);
  }

  /*
  */


  GlobalDecorator.prototype._setGlobals = function(global) {
    var name, _i, _len, _ref, _results;
    this.global = global != null ? global : [];
    if (this.view.sections) {
      _ref = this.view.sections;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        name = _ref[_i];
        _results.push(this._setChild(this.view.sections[name]));
      }
      return _results;
    }
  };

  /*
  */


  GlobalDecorator.prototype._setChild = function(child) {
    var cglob, global, joined, property, _i, _len, _ref;
    cglob = toarray(child.global);
    if ((joined = _.union(cglob, this.global)).length === cglob.length) {
      return;
    }
    global = joined;
    _ref = this.global;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      property = _ref[_i];
      this.view.bind(property).to(child, property).now();
    }
    return child.set("global", global);
  };

  /*
  */


  GlobalDecorator.getOptions = function(view) {
    return true;
  };

  GlobalDecorator.decorate = function(view, global) {
    return new GlobalDecorator(view, global);
  };

  return GlobalDecorator;

})();

module.exports = GlobalDecorator;
