// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["./base", "outcome", "../../utils/async", "../collection", "pilot-block"], function(BaseViewDecorator, outcome, async, Collection, pilot) {
    var ChildrenDecorator, _ref;

    ChildrenDecorator = (function(_super) {
      __extends(ChildrenDecorator, _super);

      function ChildrenDecorator() {
        _ref = ChildrenDecorator.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      /*
      */


      ChildrenDecorator.prototype.init = function() {
        var child, childrenClasses, clazz, property, _results;

        ChildrenDecorator.__super__.init.call(this);
        childrenClasses = this.view.children;
        this._children = new Collection();
        this._childrenByName = {};
        _results = [];
        for (property in childrenClasses) {
          clazz = childrenClasses[property];
          child = new clazz();
          this._children[property] = this._childrenByName[property] = child;
          this.view.set(property, child);
          this.view.linkChild(child);
          _results.push(this._children.push(child));
        }
        return _results;
      };

      /*
      */


      ChildrenDecorator.prototype.load = function(callback) {
        var _this = this;

        this.view.children = this.view.children = this._children;
        return this._children.load(function(err) {
          var childName;

          if (err != null) {
            return callback(err);
          }
          for (childName in _this._childrenByName) {
            _this.view.set("section." + childName, _this._childrenByName[childName].section.html());
          }
          return setTimeout(callback, 0);
        });
      };

      /*
      */


      ChildrenDecorator.prototype.render = function(callback) {
        return this._children.render(callback);
      };

      /*
      */


      ChildrenDecorator.prototype.display = function(callback) {
        return this._children.display(callback);
      };

      /*
      */


      ChildrenDecorator.prototype.remove = function(callback) {
        return this._children.remove(callback);
      };

      return ChildrenDecorator;

    })(BaseViewDecorator);
    ChildrenDecorator.test = function(view) {
      return view.children && !view.children.__isCollection;
    };
    return ChildrenDecorator;
  });

}).call(this);
