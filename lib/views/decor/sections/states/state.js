// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["bindable", "underscore"], function(bindable, _) {
  return (function(_super) {
    __extends(_Class, _super);

    /*
    */


    function _Class(states, options, index) {
      var ops;

      this.states = states;
      ops = {};
      if (!options["class"]) {
        ops["class"] = options;
      } else {
        ops = options;
      }
      this._id = options.name || Math.random();
      ops.index = index;
      ops.selected = false;
      _Class.__super__.constructor.call(this, ops);
    }

    /*
    */


    _Class.prototype.select = function() {
      return this.states.select(this);
    };

    /*
    */


    _Class.prototype.hide = function() {
      var _ref;

      if ((_ref = this._view) != null) {
        _ref.$().css({
          display: "none"
        });
      }
      return this._view.set("visible", false);
    };

    /*
    */


    _Class.prototype.show = function() {
      var _ref;

      if ((_ref = this._view) != null) {
        _ref.$().css({
          display: "block"
        });
      }
      return this._view.set("visible", true);
    };

    /*
    */


    _Class.prototype.getView = function() {
      var clazz;

      if (this._view) {
        return this._view;
      }
      clazz = this.get("class");
      return this._view = new clazz();
    };

    return _Class;

  })(bindable.Object);
});
