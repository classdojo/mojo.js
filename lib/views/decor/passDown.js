// Generated by CoffeeScript 1.6.2
/*
 defines singleton properties which can be propogated to all
 children
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["./base", "toarray"], function(BaseDecorator, toarray) {
    var SingletonDecorator, _ref;

    SingletonDecorator = (function(_super) {
      __extends(SingletonDecorator, _super);

      function SingletonDecorator() {
        _ref = SingletonDecorator.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      /*
      */


      SingletonDecorator.prototype.render = function(callback) {
        var p, pd, property, _i, _len;

        this.view.el[0]._view = this.view;
        this._bindings = [];
        p = this.view.el.parent()[0];
        this._bindings = [];
        while (p.parentNode) {
          if (p._view && p._view.passDown) {
            pd = toarray(p._view.passDown);
            for (_i = 0, _len = pd.length; _i < _len; _i++) {
              property = pd[_i];
              this._bindings.push(p._view.bind(property).to(this.view, property));
            }
          }
          p = p.parentNode;
        }
        return callback();
      };

      SingletonDecorator.prototype.remove = function(callback) {
        var binding, _i, _len, _ref1;

        _ref1 = this._bindings;
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          binding = _ref1[_i];
          binding.dispose();
        }
        this._bindings = [];
        return callback();
      };

      return SingletonDecorator;

    })(BaseDecorator);
    SingletonDecorator.test = function(value) {
      return true;
    };
    return SingletonDecorator;
  });

}).call(this);
