// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["./base", "rivets"], function(BaseViewDecorator, rivets) {
    var BindingsDecorator;
    rivets.configure({
      adapter: {
        subscribe: function(obj, keypath, callback) {
          return obj.on("change:" + keypath.replace(/,/g, "."), callback);
        },
        unsubscribe: function(obj, keypath, callback) {
          return obj.off("change:" + keypath.replace(/,/g, "."), callback);
        },
        read: function(obj, keypath) {
          return obj.get(keypath.replace(/,/g, "."));
        },
        publish: function(obj, keypath, value) {
          return obj.set(keypath.replace(/,/g, "."), value);
        }
      }
    });
    BindingsDecorator = (function(_super) {

      __extends(BindingsDecorator, _super);

      function BindingsDecorator() {
        return BindingsDecorator.__super__.constructor.apply(this, arguments);
      }

      /*
      */


      BindingsDecorator.prototype.attach = function(callback) {
        rivets.bind(this.view.element, {
          data: this.view
        });
        return callback();
      };

      return BindingsDecorator;

    })(BaseViewDecorator);
    BindingsDecorator.test = function(view) {
      return true;
    };
    return BindingsDecorator;
  });

}).call(this);
