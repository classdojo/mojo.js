// Generated by CoffeeScript 1.6.2
/*
class extends View
  
  states: 
    "#selector": {
      views: [View1, View2]
    }
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["../selectable", "./states"], function(SelectableDecorator, States) {
    var StatesDecorator, _ref;

    StatesDecorator = (function(_super) {
      __extends(StatesDecorator, _super);

      function StatesDecorator() {
        _ref = StatesDecorator.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      StatesDecorator.prototype.name = "states";

      StatesDecorator.prototype.controllerClass = States;

      return StatesDecorator;

    })(SelectableDecorator);
    StatesDecorator.test = function(view) {
      return !!view.states;
    };
    return StatesDecorator;
  });

}).call(this);
