// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["bindable"], function(bindable) {
    /*
     TODO - implement virtual methods
    */

    var BackboneWrapperModel;

    return BackboneWrapperModel = (function(_super) {
      __extends(BackboneWrapperModel, _super);

      /*
      */


      function BackboneWrapperModel(model) {
        var key, _fn,
          _this = this;

        BackboneWrapperModel.__super__.constructor.call(this, model.attributes);
        this.model = model;
        model.item = this;
        _fn = function(key) {
          var v;

          v = model[key];
          if (typeof v === "function" && !_this[key]) {
            return _this[key] = function() {
              return v.apply(model, arguments);
            };
          }
        };
        for (key in model) {
          _fn(key);
        }
      }

      /*
      */


      BackboneWrapperModel.prototype.get = function() {
        var _ref;

        return (_ref = this.model).get.apply(_ref, arguments);
      };

      /*
      */


      BackboneWrapperModel.prototype._set = function() {
        var _ref;

        (_ref = this.model).set.apply(_ref, arguments);
        return BackboneWrapperModel.__super__._set.apply(this, arguments);
      };

      return BackboneWrapperModel;

    })(bindable.Object);
  });

}).call(this);
