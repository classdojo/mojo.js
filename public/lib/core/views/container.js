// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["./base", "../collections/concrete", "underscore"], function(BaseView, Collection, _) {
    var ContainerView;
    return ContainerView = (function(_super) {

      __extends(ContainerView, _super);

      /*
      */


      function ContainerView(options) {
        this.options = options != null ? options : {};
        this._onChildrenUpdated = __bind(this._onChildrenUpdated, this);

        _.defaults(options, {
          childrenElement: ".children"
        });
        this.children = new Collection();
        this.children.on("updated", this._onChildrenUpdated);
        this.children.source(this.options.children || []);
      }

      /*
      */


      ContainerView.prototype._onChildrenUpdated = function(event) {};

      return ContainerView;

    })(BaseView);
  });

}).call(this);
