// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["./base"], function(BaseCollection) {
    var ConcreteCollection;
    return ConcreteCollection = (function(_super) {

      __extends(ConcreteCollection, _super);

      function ConcreteCollection() {
        return ConcreteCollection.__super__.constructor.apply(this, arguments);
      }

      /*
           transforms an object with different properties
      */


      ConcreteCollection.prototype.transform = function(value) {
        if (!arguments.length) {
          return this._transformer;
        }
        this._transformer = value;
        return this;
      };

      /*
      */


      ConcreteCollection.prototype.itemFactory = function(value) {
        if (!arguments.length) {
          return this._itemFactory;
        }
        this._itemFactory = value;
        return this;
      };

      /*
      */


      ConcreteCollection.prototype._addItem = function(item, index) {
        item = this._transform(item, index);
        if (!this._itemFactory) {
          return item;
        }
        return this._itemFactory.createItem(item);
      };

      /*
      */


      ConcreteCollection.prototype._transform = function(item, index) {
        if (!this._transformer) {
          return item;
        }
        return this._transformer(item, index);
      };

      return ConcreteCollection;

    })(BaseCollection);
  });

}).call(this);
