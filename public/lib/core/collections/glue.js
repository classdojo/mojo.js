// Generated by CoffeeScript 1.4.0
(function() {

  define(["dref"], function(dref) {
    var CollectionGlue;
    return CollectionGlue = (function() {
      /*
      */

      function CollectionGlue(from, to) {
        this._listeners = from.on({
          "add": function(event) {
            return to.addItemAt(event.item, event.index);
          },
          "remove": function(event) {
            return to.removeItemById(dref.get(event.item, "_id"));
          },
          "reset": function(event) {
            var item, _i, _j, _len, _len1, _ref, _ref1, _results;
            _ref = event.oldSource;
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              item = _ref[_i];
              to.removeItemById(dref.get(item, "_id"));
            }
            _ref1 = event.source;
            _results = [];
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              item = _ref1[_j];
              _results.push(to.addItem(item));
            }
            return _results;
          }
        });
        to.addItems(from.source());
      }

      /*
      */


      CollectionGlue.prototype.bothWays = function() {
        throw new Error("collection.glue().bothWays() is not implemented yet");
      };

      /*
      */


      CollectionGlue.prototype.dispose = function() {
        if (!this._listeners) {
          return;
        }
        return this._listeners.dispose();
      };

      return CollectionGlue;

    })();
  });

}).call(this);
