// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(["dref"], function(dref) {
    var Binding;
    return Binding = (function() {
      /*
      */

      function Binding(bindable, key, callback) {
        this.bindable = bindable;
        this.key = key;
        this.callback = callback;
        this._onChange = __bind(this._onChange, this);

        console.log(key);
        this._listen();
      }

      /*
      */


      Binding.prototype.dispose = function() {
        if (!this._listener) {
          return;
        }
        return this._listener.dispose();
      };

      /*
      */


      Binding.prototype._listen = function() {
        var event, keyParts;
        keyParts = this.key.split(".");
        event = "change:" + (keyParts.shift()) + ".**";
        this._listener = this.bindable.on(event, this._onChange);
        return this._onChange();
      };

      /*
      */


      Binding.prototype._onChange = function() {
        var newValue;
        newValue = this.bindable.get(this.key);
        if (this.oldValue !== newValue) {
          return this.callback(this.oldValue = newValue, this.oldValue);
        }
      };

      return Binding;

    })();
  });

}).call(this);
