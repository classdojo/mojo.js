// Generated by CoffeeScript 1.4.0

/*
 Abstract factory combines multiple factories into one.
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["factories/base"], function(BasFactory) {
    var AbstractFactory;
    return AbstractFactory = (function(_super) {

      __extends(AbstractFactory, _super);

      /*
      */


      function AbstractFactory() {
        AbstractFactory.__super__.constructor.call(this);
      }

      /*
      */


      AbstractFactory.prototype.register = function() {};

      return AbstractFactory;

    })(BaseFactory);
  });

}).call(this);
