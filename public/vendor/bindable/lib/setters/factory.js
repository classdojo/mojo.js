define(["require", "/vendor/bindable/lib/setters/fn.js", "/vendor/bindable/lib/setters/bindable.js"], function(require) {

    var __dirname = "/vendor/bindable/lib/setters",
    __filename    = "/vendor/bindable/lib/setters/factory.js",
    module        = { exports: {} },
    exports       = module.exports,
    define        = undefined,
    window        = exports;

    

    // Generated by CoffeeScript 1.4.0
(function() {
  var BindableSetter, FnSetter;

  FnSetter = require("/vendor/bindable/lib/setters/fn.js");

  BindableSetter = require("/vendor/bindable/lib/setters/bindable.js");

  module.exports = (function() {

    function _Class() {}

    /*
    */


    _Class.prototype.createSetter = function(binding, target, property) {
      var callback, to, toProperty;
      to = null;
      toProperty = null;
      callback = null;
      if (!target && !property) {
        return null;
      }
      if (typeof property === "string") {
        to = target;
        toProperty = property;
      } else if (typeof target === "string") {
        to = binding.from;
        toProperty = target;
      } else if (typeof target === "function") {
        callback = target;
      } else if (typeof target === "object" && target && target.__isBinding) {
        throw new Error("Cannot bind to a binding.");
      }
      if (callback) {
        return new FnSetter(binding, callback);
      } else if (to && toProperty) {
        return new BindableSetter(binding, to, toProperty);
      }
      return null;
    };

    return _Class;

  })();

}).call(this);


    return module.exports;
});