define(["require", "bindable/lib/object/setters/fn", "bindable/lib/object/setters/bindable", "bindable/lib/object/setters/collection"], function(require) {

    var __dirname = "bindable/lib/object/setters",
    __filename    = "bindable/lib/object/setters/factory.js",
    module        = { exports: {} },
    exports       = module.exports,
    define        = undefined,
    window        = exports,
    global        = window;

    

    // Generated by CoffeeScript 1.6.2
(function() {
  var BindableSetter, CollectionSetter, FnSetter;

  FnSetter = require("bindable/lib/object/setters/fn");

  BindableSetter = require("bindable/lib/object/setters/bindable");

  CollectionSetter = require("bindable/lib/object/setters/collection");

  module.exports = (function() {
    function _Class() {}

    /*
    */


    _Class.prototype.createSetter = function(binding, target, property) {
      var callback, to, toProperty;

      to = null;
      toProperty = null;
      callback = null;
      if (!target && !property) {
        return null;
      }
      if (typeof property === "string") {
        to = target;
        toProperty = property;
      } else if (typeof target === "string") {
        to = binding._from;
        toProperty = target;
      } else if (typeof target === "function") {
        callback = target;
      } else if (typeof target === "object" && target) {
        if (target.__isBinding) {
          throw new Error("Cannot bind to a binding.");
        } else if (target.__isCollection) {
          return new CollectionSetter(binding, target);
        }
      }
      if (callback) {
        return new FnSetter(binding, callback);
      } else if (to && toProperty) {
        return new BindableSetter(binding, to, toProperty);
      }
      return null;
    };

    return _Class;

  })();

}).call(this);


    return module.exports;
});