// Generated by CoffeeScript 1.6.2
(function() {
  var Base,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Base = require("./base");

  module.exports = (function(_super) {
    __extends(_Class, _super);

    /*
    */


    function _Class(binding, to, property) {
      this.binding = binding;
      this.to = to;
      this.property = property;
      _Class.__super__.constructor.call(this, this.binding);
    }

    /*
    */


    _Class.prototype._change = function(value) {
      return this.to.set(this.property, value);
    };

    /*
    */


    _Class.prototype.dispose = function() {
      if (!this._disposable) {
        return;
      }
      this._disposable.dispose();
      return this._disposable = this.binding = this.to = this.property = null;
    };

    /*
    */


    _Class.prototype.bothWays = function() {
      var _this = this;

      return this._disposable = this.to.bind(this.property).to(function(value) {
        if (_this.currentValue !== value) {
          return _this._changeFrom(value);
        }
      });
    };

    /*
    */


    _Class.prototype._changeFrom = function(value) {
      var _this = this;

      return this.__transform("from", value, function(err, transformedValue) {
        if (err) {
          throw err;
        }
        return _this.binding._from.set(_this.binding._property, _this.currentValue = transformedValue);
      });
    };

    return _Class;

  })(Base);

}).call(this);
